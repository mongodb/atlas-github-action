name: 'Atlas CLI GitHub Action'
description: 'Use AtlasCLI in your GitHub workflow'
branding:
  icon: 'terminal'
  color: 'green'
inputs:
  version:
    description: Version of the Atlas CLI to install
    required: false
  create-project-name:
    description: 'Name of the project that will be created.'
    required: false
  delete-project-id:
    description: 'Id of the project that will be deleted.'
    required: false
outputs:
  create-project-id:
    description: 'ProjectId of the project that was created.'
    value: ${{ steps.create-project.outputs.create-project-id }}
runs:
  using: 'composite'
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Support Linux Only"
        exit 1
    - name: Find latest tag
      if: -z "${{ inputs.version }}"
      uses: oprypin/find-latest-tag@v1
      id: find-latest-tag
      with:
        repository: mongodb/mongodb-atlas-cli
        releases-only: true
        regex: 'atlascli*'
    - name: Determine tag
      id: determine-tag
      shell: bash
      run: |
        if [ -z "${{ inputs.version }}" ]
        then
          echo "cli-tag=${{ steps.find-latest-tag.outputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "cli-tag=atlascli/${{ inputs.version }}" >> $GITHUB_OUTPUT
        fi
    - name: Download release
      id: download-release
      uses: robinraju/release-downloader@v1.8
      with:
        repository: mongodb/mongodb-atlas-cli
        tag: ${{ steps.determine-tag.outputs.cli-tag }}
        fileName: 'mongodb-atlas-cli*linux*.tar.gz'
        out-file-path: /tmp
    - name: Check Atlas CLI is installed
      id: check-path
      shell: bash
      run: |
        if ! which atlas >/dev/null 2>&1; then
          # execute the following step only if the binary is not in PATH
          echo "atlas-installed=0" >> $GITHUB_OUTPUT
        exit 0
        fi
        echo "atlas-installed=1" >> $GITHUB_OUTPUT
    - name: Install AtlasCLI
      if: steps.check-path.outputs.atlas-installed == 0
      shell: bash
      run: |
        if [ ${{ runner.arch }} = "ARM64" ]; then
            ARCH="arm64"
        elif [ ${{ runner.arch }} = "X64" ]; then
            ARCH="x86_64"
        else
          echo "::error title=⛔ error hint::Support ARM64 and AMD64 Only"
          exit 1
        fi

        tar -C /tmp -xzf /tmp/mongodb-atlas-cli_*_linux_${ARCH}.tar.gz
        sudo mv /tmp/mongodb-atlas-cli_*_linux_${ARCH}/bin/atlas /usr/bin
    - name: Create Project
      if: ${{ inputs.create-project-name }}
      shell: bash
      id: create-project
      run: |
        projectId=$(atlas project create "${{ inputs.create-project-name }}" -o json-path="$.id")
        echo "create-project-id=$(echo $projectId)" >> $GITHUB_OUTPUT
    - name: Delete Project
      if: ${{ inputs.delete-project-id }}
      shell: bash
      run: atlas project delete ${{ inputs.delete-project-id }} --force
